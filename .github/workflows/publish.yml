name: Build and Deploy Spring boot and Node.js apps

on:
  push:
    branches: [dev, main,devBot_V1.0.0]

jobs:
  build-docker:
    name: Build and deploy Spring and Node projects
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven

      - name: Build Spring with Maven
        run: mvn -f back/pom.xml clean package -DskipTests

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Node.js dependencies
        run: npm install

      - name: Build Node.js app
        run: npm run build  # Reemplaza con el script de construcción de tu aplicación Node.js

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Spring Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./back
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_PROJECT }}:latest

      - name: Build and push Node.js Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./front  # Ajusta la ruta al directorio de tu aplicación Node.js
          dockerfile: Dockerfile  # Ajusta si es necesario
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest

  deploy:
    name: Deploy to DonWeb
    needs: build-docker
    runs-on: self-hosted #ubuntu-latest

    steps:
      - name: Docker Instance Stop and remove
        run: docker rm -f devbot

      - name: Docker pull Spring image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/devbot:latest

      - name: Docker pull Node.js image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest

      - name: Docker run Spring image
        run: |
          docker run -d \
          --restart always \
          --name devbot \
          -p 9698:9698 \
          ${{ secrets.DOCKERHUB_USERNAME }}/devbot:latest

      - name: Docker run Node.js image
        run: |
          docker run -d \
          --restart always \
          --name node-app \
          -p 3000:3000 \ 
          ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest
#docker run -p 3323:3306 --name mysql_trucking --network spring-mysql-network --restart always -v /root/backend/app:/var/lib/mysql -e  MYSQL_DATABASE=db_trucking -e MYSQL_ROOT_PASSWORD=trucking2023  -d  mysql:8.0.33